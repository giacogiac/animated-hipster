/*
* generated by Xtext
*/
grammar InternalAMLX;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package arduinoml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package arduinoml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import arduinoml.services.AMLXGrammarAccess;

}

@parser::members {
 
 	private AMLXGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AMLXGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMachine
entryRuleMachine 
:
{ before(grammarAccess.getMachineRule()); }
	 ruleMachine
{ after(grammarAccess.getMachineRule()); } 
	 EOF 
;

// Rule Machine
ruleMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMachineAccess().getGroup()); }
(rule__Machine__Group__0)
{ after(grammarAccess.getMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBrick
entryRuleBrick 
:
{ before(grammarAccess.getBrickRule()); }
	 ruleBrick
{ after(grammarAccess.getBrickRule()); } 
	 EOF 
;

// Rule Brick
ruleBrick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBrickAccess().getAlternatives()); }
(rule__Brick__Alternatives)
{ after(grammarAccess.getBrickAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getAlternatives()); }
(rule__Condition__Alternatives)
{ after(grammarAccess.getConditionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensor
entryRuleSensor 
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorAccess().getGroup()); }
(rule__Sensor__Group__0)
{ after(grammarAccess.getSensorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActuator
entryRuleActuator 
:
{ before(grammarAccess.getActuatorRule()); }
	 ruleActuator
{ after(grammarAccess.getActuatorRule()); } 
	 EOF 
;

// Rule Actuator
ruleActuator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActuatorAccess().getGroup()); }
(rule__Actuator__Group__0)
{ after(grammarAccess.getActuatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDigitalAction
entryRuleDigitalAction 
:
{ before(grammarAccess.getDigitalActionRule()); }
	 ruleDigitalAction
{ after(grammarAccess.getDigitalActionRule()); } 
	 EOF 
;

// Rule DigitalAction
ruleDigitalAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDigitalActionAccess().getGroup()); }
(rule__DigitalAction__Group__0)
{ after(grammarAccess.getDigitalActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDigitalSensorCondition
entryRuleDigitalSensorCondition 
:
{ before(grammarAccess.getDigitalSensorConditionRule()); }
	 ruleDigitalSensorCondition
{ after(grammarAccess.getDigitalSensorConditionRule()); } 
	 EOF 
;

// Rule DigitalSensorCondition
ruleDigitalSensorCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getGroup()); }
(rule__DigitalSensorCondition__Group__0)
{ after(grammarAccess.getDigitalSensorConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeCondition
entryRuleTimeCondition 
:
{ before(grammarAccess.getTimeConditionRule()); }
	 ruleTimeCondition
{ after(grammarAccess.getTimeConditionRule()); } 
	 EOF 
;

// Rule TimeCondition
ruleTimeCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeConditionAccess().getGroup()); }
(rule__TimeCondition__Group__0)
{ after(grammarAccess.getTimeConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDigitalBrickState
entryRuleDigitalBrickState 
:
{ before(grammarAccess.getDigitalBrickStateRule()); }
	 ruleDigitalBrickState
{ after(grammarAccess.getDigitalBrickStateRule()); } 
	 EOF 
;

// Rule DigitalBrickState
ruleDigitalBrickState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDigitalBrickStateAccess().getDigitalBrickStateKeyword()); }

	'DigitalBrickState' 

{ after(grammarAccess.getDigitalBrickStateAccess().getDigitalBrickStateKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getComparisonKeyword()); }

	'Comparison' 

{ after(grammarAccess.getComparisonAccess().getComparisonKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Brick__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBrickAccess().getSensorParserRuleCall_0()); }
	ruleSensor
{ after(grammarAccess.getBrickAccess().getSensorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBrickAccess().getActuatorParserRuleCall_1()); }
	ruleActuator
{ after(grammarAccess.getBrickAccess().getActuatorParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getDigitalSensorConditionParserRuleCall_0()); }
	ruleDigitalSensorCondition
{ after(grammarAccess.getConditionAccess().getDigitalSensorConditionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getTimeConditionParserRuleCall_1()); }
	ruleTimeCondition
{ after(grammarAccess.getConditionAccess().getTimeConditionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Machine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__0__Impl
	rule__Machine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getMachineKeyword_0()); }

	'Machine' 

{ after(grammarAccess.getMachineAccess().getMachineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__1__Impl
	rule__Machine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__2__Impl
	rule__Machine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStartKeyword_2()); }

	'start' 

{ after(grammarAccess.getMachineAccess().getStartKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__3__Impl
	rule__Machine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStartAssignment_3()); }
(rule__Machine__StartAssignment_3)
{ after(grammarAccess.getMachineAccess().getStartAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__4__Impl
	rule__Machine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getGroup_4()); }
(rule__Machine__Group_4__0)?
{ after(grammarAccess.getMachineAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__5__Impl
	rule__Machine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStatesKeyword_5()); }

	'states' 

{ after(grammarAccess.getMachineAccess().getStatesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__6__Impl
	rule__Machine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__7__Impl
	rule__Machine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStatesAssignment_7()); }
(rule__Machine__StatesAssignment_7)
{ after(grammarAccess.getMachineAccess().getStatesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__8__Impl
	rule__Machine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getGroup_8()); }
(rule__Machine__Group_8__0)*
{ after(grammarAccess.getMachineAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__9__Impl
	rule__Machine__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Machine__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_4__0__Impl
	rule__Machine__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getBricksKeyword_4_0()); }

	'bricks' 

{ after(grammarAccess.getMachineAccess().getBricksKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_4__1__Impl
	rule__Machine__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getMachineAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_4__2__Impl
	rule__Machine__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getBricksAssignment_4_2()); }
(rule__Machine__BricksAssignment_4_2)
{ after(grammarAccess.getMachineAccess().getBricksAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_4__3__Impl
	rule__Machine__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getGroup_4_3()); }
(rule__Machine__Group_4_3__0)*
{ after(grammarAccess.getMachineAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getMachineAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Machine__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_4_3__0__Impl
	rule__Machine__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getMachineAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getBricksAssignment_4_3_1()); }
(rule__Machine__BricksAssignment_4_3_1)
{ after(grammarAccess.getMachineAccess().getBricksAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Machine__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_8__0__Impl
	rule__Machine__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getCommaKeyword_8_0()); }

	',' 

{ after(grammarAccess.getMachineAccess().getCommaKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Machine__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Machine__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStatesAssignment_8_1()); }
(rule__Machine__StatesAssignment_8_1)
{ after(grammarAccess.getMachineAccess().getStatesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateAction_0()); }
(

)
{ after(grammarAccess.getStateAccess().getStateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_1()); }

	'State' 

{ after(grammarAccess.getStateAccess().getStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_2()); }
(rule__State__NameAssignment_2)
{ after(grammarAccess.getStateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_4()); }
(rule__State__Group_4__0)?
{ after(grammarAccess.getStateAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_5()); }
(rule__State__Group_5__0)?
{ after(grammarAccess.getStateAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__State__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_4__0__Impl
	rule__State__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsKeyword_4_0()); }

	'transitions' 

{ after(grammarAccess.getStateAccess().getTransitionsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_4__1__Impl
	rule__State__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_4__2__Impl
	rule__State__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsAssignment_4_2()); }
(rule__State__TransitionsAssignment_4_2)
{ after(grammarAccess.getStateAccess().getTransitionsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_4__3__Impl
	rule__State__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_4_3()); }
(rule__State__Group_4_3__0)*
{ after(grammarAccess.getStateAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__State__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_4_3__0__Impl
	rule__State__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getStateAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsAssignment_4_3_1()); }
(rule__State__TransitionsAssignment_4_3_1)
{ after(grammarAccess.getStateAccess().getTransitionsAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5__0__Impl
	rule__State__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsKeyword_5_0()); }

	'actions' 

{ after(grammarAccess.getStateAccess().getActionsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5__1__Impl
	rule__State__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_5_1()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5__2__Impl
	rule__State__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsAssignment_5_2()); }
(rule__State__ActionsAssignment_5_2)
{ after(grammarAccess.getStateAccess().getActionsAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5__3__Impl
	rule__State__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_5_3()); }
(rule__State__Group_5_3__0)*
{ after(grammarAccess.getStateAccess().getGroup_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5_4()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__State__Group_5_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5_3__0__Impl
	rule__State__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getCommaKeyword_5_3_0()); }

	',' 

{ after(grammarAccess.getStateAccess().getCommaKeyword_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_5_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_5_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsAssignment_5_3_1()); }
(rule__State__ActionsAssignment_5_3_1)
{ after(grammarAccess.getStateAccess().getActionsAssignment_5_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sensor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }

	'Sensor' 

{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameAssignment_1()); }
(rule__Sensor__NameAssignment_1)
{ after(grammarAccess.getSensorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getPinKeyword_3()); }

	'pin' 

{ after(grammarAccess.getSensorAccess().getPinKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sensor__Group__4__Impl
	rule__Sensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getPinAssignment_4()); }
(rule__Sensor__PinAssignment_4)
{ after(grammarAccess.getSensorAccess().getPinAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sensor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Actuator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actuator__Group__0__Impl
	rule__Actuator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }

	'Actuator' 

{ after(grammarAccess.getActuatorAccess().getActuatorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actuator__Group__1__Impl
	rule__Actuator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getNameAssignment_1()); }
(rule__Actuator__NameAssignment_1)
{ after(grammarAccess.getActuatorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actuator__Group__2__Impl
	rule__Actuator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getActuatorAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actuator__Group__3__Impl
	rule__Actuator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getPinKeyword_3()); }

	'pin' 

{ after(grammarAccess.getActuatorAccess().getPinKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actuator__Group__4__Impl
	rule__Actuator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getPinAssignment_4()); }
(rule__Actuator__PinAssignment_4)
{ after(grammarAccess.getActuatorAccess().getPinAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Actuator__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getActuatorAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTransitionKeyword_0()); }

	'Transition' 

{ after(grammarAccess.getTransitionAccess().getTransitionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGotoKeyword_2()); }

	'goto' 

{ after(grammarAccess.getTransitionAccess().getGotoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGotoAssignment_3()); }
(rule__Transition__GotoAssignment_3)
{ after(grammarAccess.getTransitionAccess().getGotoAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getConditionsKeyword_4()); }

	'conditions' 

{ after(grammarAccess.getTransitionAccess().getConditionsKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getConditionsAssignment_6()); }
(rule__Transition__ConditionsAssignment_6)
{ after(grammarAccess.getTransitionAccess().getConditionsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__7__Impl
	rule__Transition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_7()); }
(rule__Transition__Group_7__0)*
{ after(grammarAccess.getTransitionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__8__Impl
	rule__Transition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Transition__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_7__0__Impl
	rule__Transition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getTransitionAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getConditionsAssignment_7_1()); }
(rule__Transition__ConditionsAssignment_7_1)
{ after(grammarAccess.getTransitionAccess().getConditionsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DigitalAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalAction__Group__0__Impl
	rule__DigitalAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getDigitalActionKeyword_0()); }

	'DigitalAction' 

{ after(grammarAccess.getDigitalActionAccess().getDigitalActionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalAction__Group__1__Impl
	rule__DigitalAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getDigitalActionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalAction__Group__2__Impl
	rule__DigitalAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getBStateKeyword_2()); }

	'bState' 

{ after(grammarAccess.getDigitalActionAccess().getBStateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalAction__Group__3__Impl
	rule__DigitalAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getBStateAssignment_3()); }
(rule__DigitalAction__BStateAssignment_3)
{ after(grammarAccess.getDigitalActionAccess().getBStateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalAction__Group__4__Impl
	rule__DigitalAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getActuatorKeyword_4()); }

	'actuator' 

{ after(grammarAccess.getDigitalActionAccess().getActuatorKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalAction__Group__5__Impl
	rule__DigitalAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getActuatorAssignment_5()); }
(rule__DigitalAction__ActuatorAssignment_5)
{ after(grammarAccess.getDigitalActionAccess().getActuatorAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalAction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalAction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getDigitalActionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__DigitalSensorCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalSensorCondition__Group__0__Impl
	rule__DigitalSensorCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getDigitalSensorConditionKeyword_0()); }

	'DigitalSensorCondition' 

{ after(grammarAccess.getDigitalSensorConditionAccess().getDigitalSensorConditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalSensorCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalSensorCondition__Group__1__Impl
	rule__DigitalSensorCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getDigitalSensorConditionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalSensorCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalSensorCondition__Group__2__Impl
	rule__DigitalSensorCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getBStateKeyword_2()); }

	'bState' 

{ after(grammarAccess.getDigitalSensorConditionAccess().getBStateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalSensorCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalSensorCondition__Group__3__Impl
	rule__DigitalSensorCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getBStateAssignment_3()); }
(rule__DigitalSensorCondition__BStateAssignment_3)
{ after(grammarAccess.getDigitalSensorConditionAccess().getBStateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalSensorCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalSensorCondition__Group__4__Impl
	rule__DigitalSensorCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getSensorKeyword_4()); }

	'sensor' 

{ after(grammarAccess.getDigitalSensorConditionAccess().getSensorKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalSensorCondition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalSensorCondition__Group__5__Impl
	rule__DigitalSensorCondition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getSensorAssignment_5()); }
(rule__DigitalSensorCondition__SensorAssignment_5)
{ after(grammarAccess.getDigitalSensorConditionAccess().getSensorAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DigitalSensorCondition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DigitalSensorCondition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getDigitalSensorConditionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TimeCondition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeCondition__Group__0__Impl
	rule__TimeCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getTimeConditionKeyword_0()); }

	'TimeCondition' 

{ after(grammarAccess.getTimeConditionAccess().getTimeConditionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeCondition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeCondition__Group__1__Impl
	rule__TimeCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getTimeConditionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeCondition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeCondition__Group__2__Impl
	rule__TimeCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getTimeKeyword_2()); }

	'time' 

{ after(grammarAccess.getTimeConditionAccess().getTimeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeCondition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeCondition__Group__3__Impl
	rule__TimeCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getTimeAssignment_3()); }
(rule__TimeCondition__TimeAssignment_3)
{ after(grammarAccess.getTimeConditionAccess().getTimeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeCondition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeCondition__Group__4__Impl
	rule__TimeCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getTCompKeyword_4()); }

	'tComp' 

{ after(grammarAccess.getTimeConditionAccess().getTCompKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeCondition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeCondition__Group__5__Impl
	rule__TimeCondition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getTCompAssignment_5()); }
(rule__TimeCondition__TCompAssignment_5)
{ after(grammarAccess.getTimeConditionAccess().getTCompAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeCondition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeCondition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getTimeConditionAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__Machine__StartAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStartStateCrossReference_3_0()); }
(
{ before(grammarAccess.getMachineAccess().getStartStateEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getMachineAccess().getStartStateEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMachineAccess().getStartStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__BricksAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getBricksBrickParserRuleCall_4_2_0()); }
	ruleBrick{ after(grammarAccess.getMachineAccess().getBricksBrickParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__BricksAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getBricksBrickParserRuleCall_4_3_1_0()); }
	ruleBrick{ after(grammarAccess.getMachineAccess().getBricksBrickParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__StatesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStatesStateParserRuleCall_7_0()); }
	ruleState{ after(grammarAccess.getMachineAccess().getStatesStateParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Machine__StatesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMachineAccess().getStatesStateParserRuleCall_8_1_0()); }
	ruleState{ after(grammarAccess.getMachineAccess().getStatesStateParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
	ruleTransition{ after(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionsAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_3_1_0()); }
	ruleTransition{ after(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsDigitalActionParserRuleCall_5_2_0()); }
	ruleDigitalAction{ after(grammarAccess.getStateAccess().getActionsDigitalActionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_5_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getActionsDigitalActionParserRuleCall_5_3_1_0()); }
	ruleDigitalAction{ after(grammarAccess.getStateAccess().getActionsDigitalActionParserRuleCall_5_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getSensorAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__PinAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getPinEIntParserRuleCall_4_0()); }
	ruleEInt{ after(grammarAccess.getSensorAccess().getPinEIntParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getActuatorAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__PinAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActuatorAccess().getPinEIntParserRuleCall_4_0()); }
	ruleEInt{ after(grammarAccess.getActuatorAccess().getPinEIntParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__GotoAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGotoStateCrossReference_3_0()); }
(
{ before(grammarAccess.getTransitionAccess().getGotoStateEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getTransitionAccess().getGotoStateEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getGotoStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ConditionsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getConditionsConditionParserRuleCall_6_0()); }
	ruleCondition{ after(grammarAccess.getTransitionAccess().getConditionsConditionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ConditionsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getConditionsConditionParserRuleCall_7_1_0()); }
	ruleCondition{ after(grammarAccess.getTransitionAccess().getConditionsConditionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__BStateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getBStateDigitalBrickStateParserRuleCall_3_0()); }
	ruleDigitalBrickState{ after(grammarAccess.getDigitalActionAccess().getBStateDigitalBrickStateParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalAction__ActuatorAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalActionAccess().getActuatorActuatorCrossReference_5_0()); }
(
{ before(grammarAccess.getDigitalActionAccess().getActuatorActuatorEStringParserRuleCall_5_0_1()); }
	ruleEString{ after(grammarAccess.getDigitalActionAccess().getActuatorActuatorEStringParserRuleCall_5_0_1()); }
)
{ after(grammarAccess.getDigitalActionAccess().getActuatorActuatorCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__BStateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getBStateDigitalBrickStateParserRuleCall_3_0()); }
	ruleDigitalBrickState{ after(grammarAccess.getDigitalSensorConditionAccess().getBStateDigitalBrickStateParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DigitalSensorCondition__SensorAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getSensorSensorCrossReference_5_0()); }
(
{ before(grammarAccess.getDigitalSensorConditionAccess().getSensorSensorEStringParserRuleCall_5_0_1()); }
	ruleEString{ after(grammarAccess.getDigitalSensorConditionAccess().getSensorSensorEStringParserRuleCall_5_0_1()); }
)
{ after(grammarAccess.getDigitalSensorConditionAccess().getSensorSensorCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__TimeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getTimeEIntParserRuleCall_3_0()); }
	ruleEInt{ after(grammarAccess.getTimeConditionAccess().getTimeEIntParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeCondition__TCompAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeConditionAccess().getTCompComparisonParserRuleCall_5_0()); }
	ruleComparison{ after(grammarAccess.getTimeConditionAccess().getTCompComparisonParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


