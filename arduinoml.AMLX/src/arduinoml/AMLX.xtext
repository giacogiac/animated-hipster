grammar arduinoml.AMLX with org.eclipse.xtext.common.Terminals

import "http://arduinoml/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Machine returns Machine:
	'Machine'
	'{'
		'start' start=[State|EString]
		('bricks' '{' bricks+=Brick ( "," bricks+=Brick)* '}' )?
		'states' '{' states+=State ( "," states+=State)* '}' 
	'}';

Brick returns Brick:
	Sensor | Actuator;







State returns State:
	{State}
	'State'
	name=EString
	'{'
		('transitions' '{' transitions+=Transition ( "," transitions+=Transition)* '}' )?
		('actions' '{' actions+=Action ( "," actions+=Action)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

EInt returns ecore::EInt:
	'-'? INT;

Sensor returns Sensor:
	'Sensor'
	name=EString
	'{'
		'pin' pin=EInt
	'}';

Actuator returns Actuator:
	'Actuator'
	name=EString
	'{'
		'pin' pin=EInt
	'}';

Transition returns Transition:
	'Transition'
	'{'
		'goto' goto=[State|EString]
		'conditions' '{' conditions+=Condition ( "," conditions+=Condition)* '}' 
	'}';

Action returns Action:
	'Action'
	'{'
		'bState' bState=DigitalBrickState
		'actuator' actuator=[Actuator|EString]
	'}';

Condition returns Condition:
	'Condition'
	'{'
		'bState' bState=DigitalBrickState
		'sensor' sensor=[Sensor|EString]
	'}';

DigitalBrickState returns DigitalBrickState:
	'DigitalBrickState' /* TODO: implement this rule and an appropriate IValueConverter */;
